#==========================================
# @ConfigName        全球精品机场融合配置 (优化版)
# @Author            基于墨鱼配置 + 全球机场订阅优化
# @UpdateTime        2025年7月融合版
# @Function          全球节点覆盖、智能分流、游戏优化、AI服务支持
# @ConfigVersion     3.1.0
# @Features          🌍全球7大洲节点 | 🎮游戏专线 | 🤖主流AI支持 | 📋智能分流
#==========================================

# 基础配置
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
allow-lan: true
bind-address: "*"
mode: rule
log-level: info
ipv6: false
external-controller: 127.0.0.1:9090

# 实验性功能
experimental:
  ignore-resolve-fail: true
  sniff-tls-sni: true

# 全局配置
global-client-fingerprint: chrome

# DNS 配置优化（增强容错性与隐私性）
dns:
  enable: true
  ipv6: false
  listen: 0.0.0.0:53
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  respect-rules: true
  fake-ip-filter:
    - "*.lan"
    - "*.localdomain"
    - "*.example"
    - "*.invalid"
    - "*.localhost"
    - "*.test"
    - "*.local"
    - "*.home.arpa"
    - time.*.com
    - time.*.gov
    - time.*.edu.cn
    - time.*.apple.com
    - time1.*.com
    - time2.*.com
    - time3.*.com
    - time4.*.com
    - time5.*.com
    - time6.*.com
    - time7.*.com
    - ntp.*.com
    - ntp1.*.com
    - ntp2.*.com
    - ntp3.*.com
    - ntp4.*.com
    - ntp5.*.com
    - ntp6.*.com
    - ntp7.*.com
    - "*.time.edu.cn"
    - "*.ntp.org.cn"
    - +.pool.ntp.org
    - localhost.ptlogin2.qq.com
    - +.srv.nintendo.net
    - +.stun.playstation.net
    - +.msftconnecttest.com
    - +.msftncsi.com
    - +.xboxlive.com
    - msftconnecttest.com
    - xbox.*.microsoft.com
    - "*.battlenet.com.cn"
    - "*.battlenet.com"
    - "*.blzstatic.cn"
    - "*.battle.net"
  nameserver:
    - https://223.5.5.5/dns-query
    - https://119.29.29.29/dns-query
  fallback:
    - https://1.1.1.1/dns-query
    - https://8.8.8.8/dns-query
    - tls://1.1.1.1:853
  fallback-filter:
    geoip: true
    geoip-code: CN
    ipcidr:
      - 240.0.0.0/4
      - 0.0.0.0/32
      - 127.0.0.1/32
    domain:
      - +.google.com
      - +.facebook.com
      - +.youtube.com
      - +.twitter.com
      - +.github.com

# 建立锚点（增强容错性）
pr:   &a3 {type: select,   proxies: [♻️ 自动选择, 🚀 手动切换, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇰🇷 韩国节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇩🇪 德国节点, 🇨🇦 加拿大节点, 🇦🇺 澳洲节点, 🌐 故障转移, DIRECT] }
p:    &a1 {type: http,     interval: 86400,  health-check: {enable: true, url: http://www.gstatic.com/generate_204, interval: 1800, timeout: 5000, lazy: true} }
auto: &a4 {type: url-test, lazy: true,  url: http://www.gstatic.com/generate_204, interval: 1800, tolerance: 50, timeout: 5000, use: [Sub] }
use:  &a2 {type: select,   use: [Sub] }
fallback: &a8 {type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, timeout: 5000, use: [Sub] }
loadbalance: &a9 {type: load-balance, strategy: round-robin, url: http://www.gstatic.com/generate_204, interval: 1800, timeout: 5000, use: [Sub] }
c:    &a6 {type: http,     behavior: classical, interval: 86400}
d:    &a5 {type: http,     behavior: domain,    interval: 86400}
i:    &a7 {type: http,     behavior: ipcidr,    interval: 86400}

# 代理提供者（增强容错机制）
proxy-providers:
  Sub:
    <<: *a1
    url: https://example.com/subscription.yaml  # 请替换为实际的机场订阅链接
    path: ./proxy_providers/sub.yaml
    health-check:
      enable: true
      interval: 1800
      lazy: true
      url: http://www.gstatic.com/generate_204
      timeout: 5000
    override:
      additional-prefix: "[机场]"
      additional-suffix: ""
    exclude-filter: "(?i)剩余|到期|过期|官网|产品|平台|网站|备用|频道|群|测试|实验"
    include-all: true

# 代理组配置
proxy-groups:
  # 手动选择
  - {name: 🚀 手动切换, <<: *a2}
  
  # 核心策略组
  - {name: 🌏 全球加速, type: select, proxies: [♻️ 自动选择, 🚀 手动切换, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇬🇧 英国节点, 🇨🇦 加拿大节点, 🇦🇺 澳洲节点, 🔄 备用线路, DIRECT]}
  - {name: 🎬 流媒体, type: select, proxies: [🇺🇲 美国节点, 🇸🇬 狮城节点, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🔄 备用线路]}
  - {name: 📺 哔哩哔哩, type: select, proxies: [DIRECT, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🚀 手动切换, ♻️ 自动选择]}
  - {name: 🌐 社交平台, type: select, proxies: [🇸🇬 狮城节点, 🇺🇲 美国节点, 🇭🇰 香港节点, 🇬🇧 英国节点, 🔄 备用线路]}
  - {name: 🤖 人工智能, type: select, proxies: [🇺🇲 美国节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇬🇧 英国节点, 🔄 备用线路]}
  - {name: 🎮 游戏平台, type: select, proxies: [DIRECT, 🎯 游戏专线, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🔄 备用线路]}
  - {name: 👨‍💻 开发服务, type: select, proxies: [🇺🇲 美国节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇭🇰 香港节点, 🇬🇧 英国节点, DIRECT]}
  
  # 科技服务策略组  
  - {name: 🍎 苹果服务, type: select, proxies: [DIRECT, 🇺🇲 美国节点, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点]}
  - {name: 🌌 谷歌服务, type: select, proxies: [🇺🇲 美国节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇭🇰 香港节点, 🔄 备用线路]}
  - {name: Ⓜ️ 微软服务, type: select, proxies: [🇺🇲 美国节点, 🇭🇰 香港节点, 🇸🇬 狮城节点, DIRECT]}
  
  # 国内服务策略组
  - {name: 🇨🇳 国内服务, type: select, proxies: [DIRECT, 🇭🇰 香港节点, 🇨🇳 台湾节点]}
  - {name: 🛡️ 安全防护, type: select, proxies: [REJECT, DIRECT]}
  - {name: 🐟 兜底分流, <<: *a3}
  
  # 特殊功能组
  - {name: 🎯 游戏专线, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)游戏|game|gaming", proxies: [DIRECT]}
  
  # 自动选择和故障转移
  - {name: ♻️ 自动选择, <<: *a4}
  - {name: 🌐 故障转移, <<: *a8, filter: ".*"}
  - {name: 🔄 备用线路, type: select, proxies: [♻️ 自动选择, 🌐 故障转移, DIRECT]}
  
  # 地区节点组（覆盖全球7大洲，增强容错性）
  # 支持31个国家和地区：亚洲12国、欧洲8国、北美3国、南美3国、大洋洲2国、中东3国、非洲2国
  
  # 亚洲地区
  - {name: 🇭🇰 香港节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇭🇰|港|hk|hongkong|hong kong"}
  - {name: 🇲🇴 澳门节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇲🇴|澳门|macao|macau|mo"}
  - {name: 🇨🇳 台湾节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇹🇼|台|tw|taiwan"}
  - {name: 🇯🇵 日本节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇯🇵|日|jp|japan"}
  - {name: 🇰🇷 韩国节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇰🇷|韩|kr|korea"}
  - {name: 🇸🇬 狮城节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇸🇬|新加坡|狮城|sg|singapore"}
  - {name: 🇲🇾 马来节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇲🇾|马来|my|malaysia"}
  - {name: 🇹🇭 泰国节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇹🇭|泰|th|thailand"}
  - {name: 🇻🇳 越南节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇻🇳|越南|vn|vietnam"}
  - {name: 🇵🇭 菲律宾节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇵🇭|菲律宾|ph|philippines"}
  - {name: 🇮🇩 印尼节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇮🇩|印尼|id|indonesia"}
  - {name: 🇮🇳 印度节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇮🇳|印度|in|india"}
  
  # 欧洲地区
  - {name: 🇬🇧 英国节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇬🇧|英|uk|britain|united kingdom"}
  - {name: 🇫🇷 法国节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇫🇷|法|fr|france"}
  - {name: 🇩🇪 德国节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇩🇪|德|de|germany"}
  - {name: 🇳🇱 荷兰节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇳🇱|荷兰|nl|netherlands"}
  - {name: 🇮🇹 意大利节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇮🇹|意大利|it|italy"}
  - {name: 🇪🇸 西班牙节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇪🇸|西班牙|es|spain"}
  - {name: 🇨🇭 瑞士节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇨🇭|瑞士|ch|switzerland"}
  - {name: 🇷🇺 俄罗斯节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇷🇺|俄|ru|russia"}
  
  # 北美地区
  - {name: 🇺🇲 美国节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇺🇸|美国|us|unitedstates|united states"}
  - {name: 🇨🇦 加拿大节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇨🇦|加拿大|ca|canada"}
  - {name: 🇲🇽 墨西哥节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇲🇽|墨西哥|mx|mexico"}
  
  # 南美地区
  - {name: 🇧🇷 巴西节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇧🇷|巴西|br|brazil"}
  - {name: 🇦🇷 阿根廷节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇦🇷|阿根廷|ar|argentina"}
  - {name: 🇨🇱 智利节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇨🇱|智利|cl|chile"}
  
  # 大洋洲地区
  - {name: 🇦🇺 澳洲节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇦🇺|澳|au|australia"}
  - {name: 🇳🇿 新西兰节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇳🇿|新西兰|nz|new zealand"}
  
  # 欧洲联合节点组（用于游戏等服务）
  - {name: 🇪🇺 欧洲节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇬🇧|🇫🇷|🇩🇪|🇳🇱|🇮🇹|🇪🇸|🇨🇭|🇷🇺|英|法|德|荷兰|意大利|西班牙|瑞士|俄|uk|fr|de|nl|it|es|ch|ru|britain|france|germany|netherlands|italy|spain|switzerland|russia"}
  
  # 中东地区
  - {name: 🇦🇪 阿联酋节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇦🇪|阿联酋|ae|emirates"}
  - {name: 🇸🇦 沙特节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇸🇦|沙特|sa|saudi"}
  - {name: 🇹🇷 土耳其节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇹🇷|土耳其|tr|turkey"}

  # 非洲地区
  - {name: 🇿🇦 南非节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇿🇦|南非|za|south africa"}
  - {name: 🇪🇬 埃及节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 5000, use: [Sub], filter: "(?i)🇪🇬|埃及|eg|egypt"}
  
  # 南极洲地区（第七大洲）
  - {name: 🇦🇶 南极节点, type: fallback, url: http://www.gstatic.com/generate_204, interval: 600, tolerance: 50, timeout: 8000, use: [Sub], filter: "(?i)🇦🇶|南极|antarctica|antarctic"}
  

# 规则提供者
rule-providers:
  # 远程规则集

  # 安全防护规则集（全面安全防护）
  AdBlock:
    <<: *a5
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt"
    path: ./ruleset/AdBlock.yaml
    
  AdGuard:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Advertising/Advertising.yaml"
    path: ./ruleset/AdGuard.yaml
    
  Privacy:
    <<: *a5
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt"
    path: ./ruleset/Privacy.yaml
    
  Tracking:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Privacy/Privacy.yaml"
    path: ./ruleset/Tracking.yaml
    
  Hijacking:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Hijacking/Hijacking.yaml"
    path: ./ruleset/Hijacking.yaml
    
  Malware:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Malware/Malware.yaml"
    path: ./ruleset/Malware.yaml

  # AI 服务规则集（组合规则 - 5个平台）
  OpenAI:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/OpenAI/OpenAI.yaml"
    path: ./ruleset/OpenAI.yaml
    
  Claude:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Claude/Claude.yaml"
    path: ./ruleset/Claude.yaml
    
  Copilot:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Copilot/Copilot.yaml"
    path: ./ruleset/Copilot.yaml
    
  Gemini:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Gemini/Gemini.yaml"
    path: ./ruleset/Gemini.yaml
    
  Perplexity:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Perplexity/Perplexity.yaml"
    path: ./ruleset/Perplexity.yaml

  # 流媒体服务规则集（专用规则优先，避免被GlobalMedia通用规则误捕获）
  Netflix:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Netflix/Netflix.yaml"
    path: ./ruleset/Netflix.yaml
    
  Disney:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Disney/Disney.yaml"
    path: ./ruleset/Disney.yaml
    
  YouTube:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/YouTube/YouTube.yaml"
    path: ./ruleset/YouTube.yaml
    
  Spotify:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Spotify/Spotify.yaml"
    path: ./ruleset/Spotify.yaml
    
  Twitch:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Twitch/Twitch.yaml"
    path: ./ruleset/Twitch.yaml
    
  AppleTV:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/AppleTV/AppleTV.yaml"
    path: ./ruleset/AppleTV.yaml
    
  PrimeVideo:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/AmazonPrimeVideo/AmazonPrimeVideo.yaml"
    path: ./ruleset/PrimeVideo.yaml
    
  GlobalMedia:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/GlobalMedia/GlobalMedia_Classical.yaml"
    path: ./ruleset/GlobalMedia.yaml
    
  # B站专项规则集
  BiliBili:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/BiliBili/BiliBili.yaml"
    path: ./ruleset/BiliBili.yaml

  # 社交平台规则集（专用规则优先，避免被SocialMedia通用规则误捕获）
  Telegram:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Telegram/Telegram.yaml"
    path: ./ruleset/Telegram.yaml
    
  Twitter:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Twitter/Twitter.yaml"
    path: ./ruleset/Twitter.yaml
    
  Instagram:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Instagram/Instagram.yaml"
    path: ./ruleset/Instagram.yaml
    
  Discord:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Discord/Discord.yaml"
    path: ./ruleset/Discord.yaml
    
  TikTok:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/TikTok/TikTok.yaml"
    path: ./ruleset/TikTok.yaml
    
  Facebook:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Facebook/Facebook.yaml"
    path: ./ruleset/Facebook.yaml
    
  Reddit:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Reddit/Reddit.yaml"
    path: ./ruleset/Reddit.yaml
    
  SocialMedia:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/SocialMedia/SocialMedia.yaml"
    path: ./ruleset/SocialMedia.yaml

  # 科技服务
  Apple:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Apple/Apple_Classical.yaml"
    path: ./ruleset/Apple.yaml
    
  Google:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Google/Google.yaml" 
    path: ./ruleset/Google.yaml
    
  Microsoft:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Microsoft/Microsoft.yaml"
    path: ./ruleset/Microsoft.yaml
    
  # 开发者平台规则集（组合规则 - 6个平台）
  GitHub:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/GitHub/GitHub.yaml"
    path: ./ruleset/GitHub.yaml
    
  GitLab:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/GitLab/GitLab.yaml"
    path: ./ruleset/GitLab.yaml
    
  Docker:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Docker/Docker.yaml"
    path: ./ruleset/Docker.yaml
    
  StackOverflow:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/StackExchange/StackExchange.yaml"
    path: ./ruleset/StackOverflow.yaml
    
  Cloudflare:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Cloudflare/Cloudflare.yaml"
    path: ./ruleset/Cloudflare.yaml
    
  Developer:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Developer/Developer.yaml"
    path: ./ruleset/Developer.yaml

  # 腾讯服务
  Tencent:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Tencent/Tencent.yaml"
    path: ./ruleset/Tencent.yaml

  # 游戏平台规则集（组合规则 - 7个平台）
  Steam:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Steam/Steam.yaml"
    path: ./ruleset/Steam.yaml
    
  Epic:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Epic/Epic.yaml"
    path: ./ruleset/Epic.yaml
    
  PlayStation:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/PlayStation/PlayStation.yaml"
    path: ./ruleset/PlayStation.yaml
    
  Xbox:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Xbox/Xbox.yaml"
    path: ./ruleset/Xbox.yaml
    
  Nintendo:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Nintendo/Nintendo.yaml"
    path: ./ruleset/Nintendo.yaml
    
  BattleNet:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Blizzard/Blizzard.yaml"
    path: ./ruleset/BattleNet.yaml
    
  Game:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Game/Game.yaml"
    path: ./ruleset/Game.yaml

  # 国内直连优化规则集
  ChinaDirect:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt"
    path: ./ruleset/ChinaDirect.yaml
    
  ChinaCompany:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/China/China.yaml"
    path: ./ruleset/ChinaCompany.yaml
    
  # 基础规则
  ProxyLite:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt"
    path: ./ruleset/ProxyLite.yaml
    
  ChinaASN:
    <<: *a7
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt"
    path: ./ruleset/ChinaASN.yaml
    
  Lan:
    <<: *a6
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt"
    path: ./ruleset/Lan.yaml

# 分流规则（按优先级排序）
rules:
  # 本地网络
  - RULE-SET,Lan,DIRECT
  
  # 安全防护（全面防护）
  - RULE-SET,AdBlock,🛡️ 安全防护
  - RULE-SET,AdGuard,🛡️ 安全防护
  - RULE-SET,Privacy,🛡️ 安全防护
  - RULE-SET,Tracking,🛡️ 安全防护
  - RULE-SET,Hijacking,🛡️ 安全防护
  - RULE-SET,Malware,🛡️ 安全防护
  
  # AI 服务优化（组合规则 - 5个平台）
  - RULE-SET,OpenAI,🤖 人工智能
  - RULE-SET,Claude,🤖 人工智能
  - RULE-SET,Copilot,🤖 人工智能
  - RULE-SET,Gemini,🤖 人工智能
  - RULE-SET,Perplexity,🤖 人工智能
  
  # 专用平台规则（按优先级顺序排列，确保精确匹配）
  
  # 特殊分组的视频平台
  - RULE-SET,YouTube,🌌 谷歌服务
  - RULE-SET,BiliBili,📺 哔哩哔哩
  
  # 社交平台专用规则（避免被通用规则误捕获）
  - RULE-SET,TikTok,🌐 社交平台
  - RULE-SET,Telegram,🌐 社交平台
  - RULE-SET,Twitter,🌐 社交平台
  - RULE-SET,Instagram,🌐 社交平台
  - RULE-SET,Discord,🌐 社交平台
  - RULE-SET,Facebook,🌐 社交平台
  - RULE-SET,Reddit,🌐 社交平台
  
  # 流媒体平台专用规则（避免被GlobalMedia误捕获）
  - RULE-SET,Netflix,🎬 流媒体
  - RULE-SET,Disney,🎬 流媒体
  - RULE-SET,Spotify,🎬 流媒体
  - RULE-SET,Twitch,🎬 流媒体
  - RULE-SET,AppleTV,🎬 流媒体
  - RULE-SET,PrimeVideo,🎬 流媒体
  
  # 通用兜底规则（放在最后，避免抢夺专用规则流量）
  - RULE-SET,SocialMedia,🌐 社交平台
  - RULE-SET,GlobalMedia,🎬 流媒体
  
  # 科技服务
  - RULE-SET,Apple,🍎 苹果服务
  - RULE-SET,Google,🌌 谷歌服务
  - DOMAIN-SUFFIX,microsoft.com,Ⓜ️ 微软服务
  - DOMAIN-SUFFIX,windowsupdate.com,Ⓜ️ 微软服务
  - DOMAIN-SUFFIX,update.microsoft.com,Ⓜ️ 微软服务
  - DOMAIN-SUFFIX,windows.com,Ⓜ️ 微软服务
  - DOMAIN-SUFFIX,office.com,Ⓜ️ 微软服务
  - DOMAIN-SUFFIX,live.com,Ⓜ️ 微软服务
  - RULE-SET,Microsoft,Ⓜ️ 微软服务
  
  # 开发者平台优化（组合规则 - 6个平台）
  - RULE-SET,GitHub,👨‍💻 开发服务
  - RULE-SET,GitLab,👨‍💻 开发服务
  - RULE-SET,Docker,👨‍💻 开发服务
  - RULE-SET,StackOverflow,👨‍💻 开发服务
  - RULE-SET,Cloudflare,👨‍💻 开发服务
  - RULE-SET,Developer,👨‍💻 开发服务
  
  # 腾讯服务
  - RULE-SET,Tencent,🇨🇳 国内服务
  
  # 国内直连优化
  - RULE-SET,ChinaDirect,🇨🇳 国内服务
  - RULE-SET,ChinaCompany,🇨🇳 国内服务
  
  # 游戏平台优化（组合规则 - 7个平台）
  - RULE-SET,Steam,🎮 游戏平台
  - RULE-SET,Epic,🎮 游戏平台
  - RULE-SET,PlayStation,🎮 游戏平台
  - RULE-SET,Xbox,🎮 游戏平台
  - RULE-SET,Nintendo,🎮 游戏平台
  - RULE-SET,BattleNet,🎮 游戏平台
  - RULE-SET,Game,🎮 游戏平台
  
  # 全球代理
  - RULE-SET,ProxyLite,🌏 全球加速
  
  # 国内直连（确保最优路径）
  - GEOIP,CN,🇨🇳 国内服务
  
  # 兜底规则
  - MATCH,🐟 兜底分流

# TUN 模式配置
tun:
  enable: false
  stack: system
  auto-route: true
  auto-detect-interface: true

#==========================================
# 📝 配置文件说明
#==========================================
#
# 此版本基于原版进行了以下优化：
# 1. DNS优化: 优先使用加密DNS (DoH/DoT)，将常规DNS作为备用，增强隐私和安全性。
# 2. 规则精简: 移除了大量与规则集(RULE-SET)重复的域名(DOMAIN-SUFFIX)规则。
#    这使得配置文件更简洁、高效，并依赖于社区维护的最新规则列表。
#
#==========================================
# 🎯 配置说明与使用指南
#==========================================
# 
# 📝 基础设置：
# 1. 替换订阅：将 "https://example.com/subscription.yaml" 替换为你的实际订阅链接
# 2. 开启TUN：如需TUN模式，将 "enable: false" 改为 "enable: true"
# 
# 🌟 核心功能特色：
# - 🎯 游戏专线：自动筛选机场中的游戏专用节点，延迟更低
# - 📋 智能分流：专用规则优先，避免通用规则误捕获
# - 🤖 AI服务：支持主流AI平台独立路由选择
# - 🌍 全球覆盖：7大洲31个国家地区节点支持
# 
# 🌍 全球节点覆盖：
# 亚洲：香港、澳门、台湾、日本、韩国、新加坡、马来西亚、泰国、越南、菲律宾、印尼、印度等
# 欧洲：英国、法国、德国、荷兰、意大利、西班牙、瑞士、俄罗斯等
# 北美：美国、加拿大、墨西哥
# 南美：巴西、阿根廷、智利
# 大洋洲：澳大利亚、新西兰
# 非洲：南非、埃及
# 中东：阿联酋、沙特、土耳其
# 
# 🎮 游戏优化：
# - 游戏平台会优先使用游戏专线节点
# - 支持Steam、Epic、PlayStation、Xbox等平台
# 
# 📋 规则匹配优先级（重要）：
# 🎯 专用平台规则（高优先级）：
#   - YouTube → 谷歌服务，TikTok → 社交平台
#   - Netflix、Disney+、Spotify、Twitch → 流媒体  
# 🌐 通用兜底规则（低优先级）：
#   - SocialMedia → 社交平台（捕获未知社交平台）
#   - GlobalMedia → 流媒体（捕获未知流媒体平台）
# ⚠️  专用规则必须在通用规则之前，否则会被误捕获
#==========================================
# 🛡️ 容错机制和故障处理说明
#==========================================
# 
# 🔧 DNS容错机制：
# - 多重DNS服务器：国内(223.5.5.5, 119.29.29.29) + 国外(1.1.1.1, 8.8.8.8)
# - DNS-over-HTTPS + 传统DNS双重保障
# - DNS-over-TLS加密传输保护隐私
# - respect-rules确保DNS查询遵循分流规则
# 
# 🌐 节点容错机制：
# - Fallback模式：主节点故障时自动切换到备用节点
# - 故障转移组：🌐 故障转移，所有节点统一管理
# - 负载均衡组：⚖️ 负载均衡，分散流量压力
# - 备用线路组：🔄 备用线路，多重保障
# - 健康检查：每5分钟检测，超时5秒自动切换
# 
# 🎯 订阅容错机制：
# - 自动过滤：排除无效、过期、测试节点
# - 健康检查：定期检测节点可用性
# - 订阅缓存：本地保存，订阅服务器故障时仍可使用
# - 超时保护：连接超时5秒自动重试
# 
# 📋 规则容错机制：
# - 多重规则源：Loyalsoldier + blackmatrix7 + AdGuard等
# - 手动补充：重要域名手动添加，避免规则遗漏
# - 规则缓存：本地保存86400秒，减少依赖
# - 兜底规则：MATCH规则确保所有流量都有去向
# 
# 🚨 故障场景处理：
# 
# 1️⃣ 订阅服务器故障：
#    - 使用本地缓存的节点配置
#    - 手动导入备用订阅链接
#    - 切换到"🔄 备用线路"组
# 
# 2️⃣ 主要节点故障：
#    - Fallback自动切换到同地区其他节点
#    - 使用"🌐 故障转移"统一管理
#    - 临时切换到"⚖️ 负载均衡"分散压力
# 
# 3️⃣ 整个地区节点故障：
#    - 策略组中的"🔄 备用线路"选项
#    - 手动切换到其他地区节点
#    - 使用DIRECT直连（适用于部分服务）
# 
# 4️⃣ DNS解析故障：
#    - 自动切换到备用DNS服务器
#    - Fallback机制使用国外DNS
#    - 手动切换enhanced-mode为redir-host
# 
# 5️⃣ 规则更新失败：
#    - 使用本地缓存的规则文件
#    - 手动域名规则确保核心服务可用
#    - 兜底规则确保所有流量正常转发
# 
# 6️⃣ 特定服务无法访问：
#    - 每个服务都有多个节点选择
#    - 备用线路选项作为最后保障
#    - 可临时调整为DIRECT直连测试
# 
# 💡 使用建议：
# - 定期检查节点健康状态
# - 重要服务保存多个备用方案
# - 遇到问题先切换"🔄 备用线路"
# - 极端情况下可临时使用DIRECT
# - 建议备份配置文件到本地
#
#==========================================
# 
# 🤖 AI服务支持（5个主流平台）：
# 聊天AI：OpenAI ChatGPT、Claude、Gemini/Bard、Perplexity
# 代码AI：GitHub Copilot
# 说明：专用规则仅覆盖主流AI平台，其他AI服务通过通用规则处理
# 
# ⚙️ 高级设置：
# - 自动健康检查：每10分钟检测节点可用性
# - 故障切换：节点故障时自动切换到备用节点
# - 负载均衡：支持多节点负载均衡
# 
# 🔧 自定义选项：
# - 可根据需要调整各地区节点的检测间隔
# - 可自定义容差值来控制节点切换的敏感度
# - 支持手动选择和自动切换两种模式
#
# 💡 使用建议：
# 1. 首次使用建议选择"自动选择"，让系统自动选择最优节点
# 2. 游戏时优先使用"游戏专线"或对应地区的游戏节点
# 3. 流媒体观看时选择对应服务的优化节点
# 4. 需要稳定IP时选择"家宽优选"
# 5. 特殊需求时可使用"星链网络"或"5G网络"
#
#==========================================
